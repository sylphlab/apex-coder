{
  "name": "apex-coder",
  "displayName": "Apex Coder",
  "description": "AI-powered coding assistant",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.99.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "apex-coder.showPanel",
        "title": "Show Apex Coder Panel",
        "category": "Apex Coder"
      },
      {
        "command": "apex-coder.setApiKey",
        "title": "Set API Key for AI Provider",
        "category": "Apex Coder"
      }
    ],
    "configuration": {
      "title": "Apex Coder AI Configuration",
      "properties": {
        "apexCoder.ai.provider": {
          "type": "string",
          "default": "",
          "scope": "machine-overridable",
          "description": "The AI provider to use (e.g., 'google', 'openai', 'anthropic', 'ollama'). Saved in user/workspace settings."
        },
        "apexCoder.ai.modelId": {
          "type": "string",
          "default": "",
          "scope": "machine-overridable",
          "description": "The specific model ID to use for the selected provider. Saved in user/workspace settings."
        },
        "apexCoder.ai.baseUrl": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "scope": "machine-overridable",
          "description": "Optional base URL for providers like Ollama or self-hosted models. Saved in user/workspace settings."
        },
        "apexCoder.assistantProfiles": {
          "type": "array",
          "default": [],
          "scope": "machine-overridable",
          "description": "Array of Assistant Profile configurations.",
          "items": {
            "type": "object",
            "required": [
              "id",
              "name",
              "description",
              "modelConfig",
              "instructions",
              "allowedTools"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the profile (e.g., UUID)."
              },
              "name": {
                "type": "string",
                "description": "User-defined name for the assistant (e.g., \"React Expert\")."
              },
              "description": {
                "type": "string",
                "description": "Description of the assistant's role or expertise."
              },
              "avatarColor": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Optional color identifier for UI representation (e.g., CSS color value)."
              },
              "modelConfig": {
                "type": "object",
                "required": [
                  "provider",
                  "modelId"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "Identifier for the AI provider (e.g., 'google', 'openai')."
                  },
                  "modelId": {
                    "type": "string",
                    "description": "Specific model identifier (e.g., \"gemini-1.5-pro-latest\")."
                  },
                  "apiKeySecretKeyRef": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Optional reference to the secret key stored in VS Code SecretStorage."
                  },
                  "baseUrl": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Optional custom base URL for the provider's API."
                  }
                },
                "additionalProperties": true,
                "description": "Configuration for the AI model used by this assistant."
              },
              "instructions": {
                "type": "string",
                "description": "Specific instructions or background knowledge for this assistant."
              },
              "allowedTools": {
                "type": "array",
                "description": "List of tool names this assistant is allowed to use.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "scripts": {
    "build": "tsc",
    "watch": "tsc --watch",
    "inspector": "npx @modelcontextprotocol/inspector dist/extension.js",
    "test": "vitest run",
    "test:watch": "vitest watch",
    "test:cov": "vitest run --coverage --reporter=junit --outputFile=test-report.junit.xml",
    "lint": "eslint . --ext .ts,.tsx,.js,.cjs --cache",
    "lint:fix": "eslint . --ext .ts,.tsx,.js,.cjs --fix --cache",
    "format": "prettier --write . --cache",
    "check-format": "prettier --check . --cache",
    "validate": "pnpm run check-format && pnpm run lint && pnpm run typecheck && pnpm run test",
    "start": "node dist/extension.js",
    "typecheck": "tsc --noEmit",
    "benchmark": "vitest bench",
    "clean": "rimraf dist coverage",
    "prepublishOnly": "pnpm run clean && pnpm run build",
    "changeset": "changeset",
    "version-packages": "changeset version",
    "prepare": "husky",
    "vscode:prepublish": "pnpm run package",
    "compile": "pnpm run typecheck && pnpm run lint && node esbuild.js",
    "package": "pnpm run typecheck && pnpm run lint && node esbuild.js --production"
  },
  "devDependencies": {
    "@changesets/cli": "^2.27.7",
    "@commitlint/cli": "^19.4.1",
    "@commitlint/config-conventional": "^19.4.1",
    "@eslint/js": "^9.24.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "~20.17.30",
    "@types/vscode": "^1.99.0",
    "@typescript-eslint/eslint-plugin": "^8.29.1",
    "@typescript-eslint/parser": "^8.29.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.1",
    "esbuild": "^0.25.2",
    "eslint": "^9.24.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "globals": "^16.0.0",
    "husky": "^9.1.4",
    "lint-staged": "^15.2.7",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.3.3",
    "rimraf": "^6.0.1",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.29.1",
    "vitest": "^3.1.1"
  },
  "dependencies": {
    "@ai-sdk/amazon-bedrock": "^2.2.5",
    "@ai-sdk/anthropic": "^1.2.6",
    "@ai-sdk/azure": "^1.3.8",
    "@ai-sdk/cerebras": "^0.2.6",
    "@ai-sdk/cohere": "^1.2.5",
    "@ai-sdk/deepinfra": "^0.2.7",
    "@ai-sdk/deepseek": "^0.2.6",
    "@ai-sdk/fireworks": "^0.2.6",
    "@ai-sdk/google": "^1.2.8",
    "@ai-sdk/google-vertex": "^2.2.11",
    "@ai-sdk/groq": "^1.2.5",
    "@ai-sdk/mistral": "^1.2.4",
    "@ai-sdk/openai": "^1.3.7",
    "@ai-sdk/perplexity": "^1.1.4",
    "@ai-sdk/replicate": "^0.2.4",
    "@ai-sdk/togetherai": "^0.2.6",
    "@ai-sdk/xai": "^1.2.7",
    "@iconify-json/carbon": "^1.2.8",
    "@openrouter/ai-sdk-provider": "^0.4.5",
    "@xenova/transformers": "^2.17.2",
    "ai": "^4.3.2",
    "ollama-ai-provider": "^1.2.0",
    "vectordb": "^0.18.2",
    "zod": "^3.24.2"
  },
  "lint-staged": {
    "*.{ts,tsx,js,cjs}": [
      "eslint --fix --cache",
      "prettier --write --cache"
    ],
    "*.{json,md,yaml,yml}": [
      "prettier --write --cache"
    ]
  }
}
